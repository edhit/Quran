const axios = require("axios");
const fs = require("fs");
const schedule = require("node-schedule");
const NodeID3 = require("node-id3");
require("dotenv").config();
const { Telegraf } = require("telegraf");
const { createLogger, format, transports } = require("winston");

const DATA_FILE = "quran_data.json";
const API_URL = "https://api.alquran.cloud/v1/page/";
const BOT_TOKEN = process.env.BOT_TOKEN;
const USER_CHAT_ID = process.env.USER_CHAT_ID;
const bot = new Telegraf(BOT_TOKEN);

const intervals = {
  sabak: [1, 3, 7],
  sabki: [14, 30],
  manzil: [90, 180]
};

const logger = createLogger({
  level: "info",
  format: format.combine(
    format.timestamp(),
    format.json()
  ),
  transports: [
    new transports.Console(),
    new transports.File({ filename: "bot.log" })
  ]
});

function isValidPageNumber(pageNumber) {
  return !isNaN(pageNumber) && pageNumber >= 1 && pageNumber <= 604;
}

function isAuthorizedUser(chatId) {
  return chatId == USER_CHAT_ID;
}

async function fetchAyahsByPage(pageNumber, startAyah, endAyah) {
  try {
    const response = await axios.get(`${API_URL}${pageNumber}/quran-uthmani`);
    if (!response.data || !response.data.data || !response.data.data.ayahs) {
      throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API");
    }

    let filteredAyahs;
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∞—è—Ç—ã –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É
    if (startAyah && endAyah) {
      filteredAyahs = response.data.data.ayahs.filter(
        ayah => ayah.numberInSurah >= startAyah && ayah.numberInSurah <= endAyah
      );  
    } else {
      filteredAyahs = response.data.data.ayahs;
    }

    return filteredAyahs.map(ayah => ({
      number: ayah.number,
      text: ayah.text,
      surah: ayah.surah.number,
      ayah: ayah.numberInSurah,
      page: pageNumber,
      nextReview: new Date(),
      reviewStage: "sabak",
      reviewStep: 0
    }));
  } catch (error) {
    logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${pageNumber}:`, error.message);
    return [];
  }
}

function loadData() {
  if (!fs.existsSync(DATA_FILE)) {
    return []; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  }
  return JSON.parse(fs.readFileSync(DATA_FILE, "utf-8"));
}

function deleteOldBackups() {
  const backupFiles = fs.readdirSync(".").filter(file => file.startsWith("quran_data_backup_"));
  if (backupFiles.length > 5) { // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
    backupFiles.sort((a, b) => fs.statSync(a).mtimeMs - fs.statSync(b).mtimeMs); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è
    const filesToDelete = backupFiles.slice(0, backupFiles.length - 5); // –£–¥–∞–ª—è–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5
    filesToDelete.forEach(file => {
      fs.unlinkSync(file);
      logger.info(`–°—Ç–∞—Ä–∞—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —É–¥–∞–ª–µ–Ω–∞: ${file}`);
    });
  }
}

function backupData() {
  if (!fs.existsSync(DATA_FILE)) {
    // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ —Å –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º
    fs.writeFileSync(DATA_FILE, JSON.stringify([]));
    logger.info(`–§–∞–π–ª ${DATA_FILE} —Å–æ–∑–¥–∞–Ω.`);
    return;
  }

  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
  deleteOldBackups();

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
  const backupFile = `quran_data_backup_${new Date().toISOString()}.json`;
  fs.copyFileSync(DATA_FILE, backupFile);
  logger.info(`–°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: ${backupFile}`);
}

function saveData(data) {
  backupData(); // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é (–∏–ª–∏ —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
  fs.writeFileSync(DATA_FILE, JSON.stringify(data, null, 2));
}

async function addPageForMemorization(pageNumber) {
  let data = loadData();
  const newAyahs = await fetchAyahsByPage(pageNumber);
  
  if (newAyahs.length === 0) {
    logger.warn(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
    return;
  }

  data = [...data, ...newAyahs];
  saveData(data);
  logger.info(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} –¥–æ–±–∞–≤–ª–µ–Ω–∞.`);
}

function getAyahsForReview() {
  const today = new Date();
  return loadData().filter(ayah => new Date(ayah.nextReview) <= today);
}

function updateReviewSchedule() {
  let data = loadData();
  const today = new Date();

  data.forEach(ayah => {
    if (new Date(ayah.nextReview) <= today) {
      let reviewSteps = intervals[ayah.reviewStage];
      if (ayah.reviewStep >= reviewSteps.length - 1) {
        if (ayah.reviewStage === "sabak") ayah.reviewStage = "sabki";
        else if (ayah.reviewStage === "sabki") ayah.reviewStage = "manzil";
        ayah.reviewStep = 0;
      } else {
        ayah.reviewStep++;
      }
      ayah.nextReview = new Date();
      ayah.nextReview.setDate(today.getDate() + intervals[ayah.reviewStage][ayah.reviewStep]);
    }
  });

  saveData(data);
}

function getAudioUrl(ayah, reciter) {
  const reciters = {
    husary: "ar.husary",
    alafasy: "ar.alafasy",
    abdulsamad: "ar.abdulsamad",
  };

  const reciterCode = reciters[reciter] || reciters.husary; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –•—É—Å–∞—Ä–∏
  return `https://api.alquran.cloud/v1/ayah/${ayah.surah}:${ayah.ayah}/${reciterCode}`;
}

bot.command("review", async (ctx) => {
  if (!isAuthorizedUser(ctx.message.chat.id)) {
    return ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
  }

  const args = ctx.message.text.split(" ");
  const reciter = args[1] || "husary"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –•—É—Å–∞—Ä–∏

  const ayahs = getAyahsForReview();
  if (ayahs.length === 0) {
    return ctx.reply("–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –∞—è—Ç–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è.");
  }

  for (const ayah of ayahs) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞—É–¥–∏–æ
      const audioUrl = getAudioUrl(ayah, reciter);
      const response = await axios.get(audioUrl);
      const audioLink = response.data.data.audio;

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
      const filePath = `ayah_${ayah.surah}_${ayah.ayah}.mp3`;
      const writer = fs.createWriteStream(filePath);
      const audioResponse = await axios.get(audioLink, { responseType: "stream" });
      audioResponse.data.pipe(writer);

      await new Promise((resolve, reject) => {
        writer.on("finish", resolve);
        writer.on("error", reject);
      });

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      const tags = {
        title: `–°—É—Ä–∞ ${ayah.surah}, –ê—è—Ç ${ayah.ayah}`,
        artist: `–®–µ–π—Ö ${reciter.charAt(0).toUpperCase() + reciter.slice(1)}`, // –ò–º—è —á—Ç–µ—Ü–∞
        album: "Holy Quran",
        comment: { text: "–ò–∑ AlQuran Cloud API" },
      };
      NodeID3.write(tags, filePath);

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
      const messageText = `üìñ *${ayah.surah}:${ayah.ayah}* (—Å—Ç—Ä. ${ayah.page})\n${ayah.text}`;

      try {
        // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ —Å –ø–æ–¥–ø–∏—Å—å—é
        await ctx.replyWithAudio({ source: filePath }, {
          caption: messageText,
          parse_mode: "Markdown",
        });
      } catch (error) {
        if (error.response && error.response.error_code === 400 && error.response.description.includes("message caption is too long")) {
          // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏–∑-–∑–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏
          const audioMessage = await ctx.replyWithAudio({ source: filePath });

          // –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ –æ—Ç–≤–µ—Ç –Ω–∞ –∞—É–¥–∏–æ
          await ctx.reply(messageText, { reply_to_message_id: audioMessage.message_id, parse_mode: "Markdown" });
        } else {
          throw error; // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –¥—Ä—É–≥–∞—è ‚Äî –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –µ—ë –¥–∞–ª—å—à–µ
        }
      }

      // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      fs.unlinkSync(filePath);
      
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—è—Ç–∞:", error);
      await ctx.reply(`üìñ ${ayah.surah}:${ayah.ayah} (—Å—Ç—Ä. ${ayah.page})\n${ayah.text}`);
    }
  }
});

bot.command("addpage", async (ctx) => {
  if (!isAuthorizedUser(ctx.message.chat.id)) {
    return ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
  }

  const args = ctx.message.text.split(" ");
  if (args.length < 2) {
    return ctx.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /addpage <–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã>");
  }

  const pageNumber = parseInt(args[1]);
  if (!isValidPageNumber(pageNumber)) {
    return ctx.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç 1 –¥–æ 604.");
  }

  try {
    await addPageForMemorization(pageNumber);
    ctx.reply(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–ª–∞–Ω –∑–∞—É—á–∏–≤–∞–Ω–∏—è!`);
  } catch (error) {
    ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.");
    logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:", error);
  }
});

bot.command("addayah", async (ctx) => {
  if (!isAuthorizedUser(ctx.message.chat.id)) {
    return ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
  }

  const args = ctx.message.text.split(" ");
  if (args.length < 4) {
    return ctx.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /addayah <–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã> <–Ω–∞—á–∞–ª—å–Ω—ã–π_–∞—è—Ç> <–∫–æ–Ω–µ—á–Ω—ã–π_–∞—è—Ç>");
  }

  const pageNumber = parseInt(args[1]);
  const startAyah = parseInt(args[2]);
  const endAyah = parseInt(args[3]);

  if (!isValidPageNumber(pageNumber) || isNaN(startAyah) || isNaN(endAyah)) {
    return ctx.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∞—è—Ç–æ–≤.");
  }

  if (startAyah > endAyah) {
    return ctx.reply("‚ùå –ù–∞—á–∞–ª—å–Ω—ã–π –∞—è—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ.");
  }

  const newAyahs = await fetchAyahsByPage(pageNumber, startAyah, endAyah);
  if (newAyahs.length === 0) {
    return ctx.reply("‚ùå –ê—è—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
  }

  let data = loadData();
  data = [...data, ...newAyahs];
  saveData(data);
  ctx.reply(`‚úÖ –ê—è—Ç—ã ${startAyah}-${endAyah} —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${pageNumber} –¥–æ–±–∞–≤–ª–µ–Ω—ã.`);
});

bot.command("list", async (ctx) => {
  if (!isAuthorizedUser(ctx.message.chat.id)) {
    return ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
  }

  const data = loadData();
  if (data.length === 0) {
    return ctx.reply("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.");
  }

  const pages = [...new Set(data.map(ayah => ayah.page))].sort((a, b) => a - b);
  ctx.reply(`üìö –°—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞—É—á–∏–≤–∞–Ω–∏—è: ${pages.join(", ")}`);
});

bot.command("remove", async (ctx) => {
  if (!isAuthorizedUser(ctx.message.chat.id)) {
    return ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
  }

  const args = ctx.message.text.split(" ");
  if (args.length < 2) {
    return ctx.reply("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /remove <–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã>");
  }

  const pageNumber = parseInt(args[1]);
  if (!isValidPageNumber(pageNumber)) {
    return ctx.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç 1 –¥–æ 604.");
  }

  let data = loadData();
  const initialLength = data.length;
  data = data.filter(ayah => ayah.page !== pageNumber);

  if (data.length === initialLength) {
    return ctx.reply(`‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –∑–∞—É—á–∏–≤–∞–Ω–∏—è.`);
  }

  saveData(data);
  ctx.reply(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏—è.`);
});

bot.command("progress", async (ctx) => {
  if (!isAuthorizedUser(ctx.message.chat.id)) {
    return ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
  }

  const data = loadData();
  if (data.length === 0) {
    return ctx.reply("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.");
  }

  const progress = {};
  data.forEach(ayah => {
    if (!progress[ayah.page]) {
      progress[ayah.page] = { total: 0, sabak: 0, sabki: 0, manzil: 0 };
    }
    progress[ayah.page].total++;
    progress[ayah.page][ayah.reviewStage]++;
  });

  let message = "üìä <b>–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞—É—á–∏–≤–∞–Ω–∏—è:</b>\n";
  Object.keys(progress).sort((a, b) => a - b).forEach(page => {
    message += `\nüìñ <b>–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page}:</b>\n`;
    message += `- –í—Å–µ–≥–æ –∞—è—Ç–æ–≤: ${progress[page].total}\n`;
    message += `- –°–∞–±–∞–∫: ${progress[page].sabak}\n`;
    message += `- –°–∞–±–∫–∏: ${progress[page].sabki}\n`;
    message += `- –ú–∞–Ω–∑–∏–ª—å: ${progress[page].manzil}\n`;
  });

  ctx.replyWithHTML(message);
});

bot.command("update", async (ctx) => {
  if (!isAuthorizedUser(ctx.message.chat.id)) {
    return ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
  }

  try {
    updateReviewSchedule();
    ctx.reply("‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ.");
  } catch (error) {
    ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.");
    logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", error);
  }
});

bot.command("reciters", async (ctx) => {
  const message = `
üéô <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —á—Ç–µ—Ü—ã:</b>
- <b>husary</b>: –®–µ–π—Ö –ú–∞—Ö–º—É–¥ –•–∞–ª–∏–ª—å –∞–ª—å-–•—É—Å–∞—Ä–∏
- <b>alafasy</b>: –®–µ–π—Ö –ú–∏—à–∞—Ä–∏ –†–∞—à–∏–¥ –∞–ª—å-–ê—Ñ–∞—Å–∏
- <b>abdulsamad</b>: –®–µ–π—Ö –ê–±–¥—É—Ä-–†–∞—Ö–º–∞–Ω –∞—Å-–°—É–¥–∞–∏—Å
  `;

  ctx.replyWithHTML(message);
});

bot.command("start", (ctx) => {
  const welcomeMessage = `
üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –∑–∞—É—á–∏–≤–∞–Ω–∏—è –ö–æ—Ä–∞–Ω–∞!</b>

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∑–∞—É—á–∏–≤–∞–Ω–∏—è –ö–æ—Ä–∞–Ω–∞ –ø–æ –º–µ—Ç–æ–¥–∏–∫–µ <i>"–°–∞–±–∞“õ-–°–∞–±“õ–∏-–ú–∞–Ω–∑–∏–ª—å"</i>.

üìö <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
- <code>/addpage &lt;–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã&gt;</code> ‚Äî –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞—É—á–∏–≤–∞–Ω–∏—è.
- <code>/addayah &lt;–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã&gt; &lt;–Ω–∞—á–∞–ª—å–Ω—ã–π_–∞—è—Ç&gt; &lt;–∫–æ–Ω–µ—á–Ω—ã–π_–∞—è—Ç&gt;</code> ‚Äî –î–æ–±–∞–≤–∏—Ç—å –∞—è—Ç—ã –¥–ª—è –∑–∞—É—á–∏–≤–∞–Ω–∏—è.
- <code>/review [—á—Ç–µ—Ü]</code> ‚Äî –ü–æ–ª—É—á–∏—Ç—å –∞—è—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.
- <code>/list</code> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞—É—á–∏–≤–∞–Ω–∏—è.
- <code>/remove &lt;–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã&gt;</code> ‚Äî –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏—è.
- <code>/update</code> ‚Äî –û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –≤—Ä—É—á–Ω—É—é.
- <code>/progress</code> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞—É—á–∏–≤–∞–Ω–∏—è.
- <code>/reciters</code> ‚Äî –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á—Ç–µ—Ü–æ–≤.
- <code>/help</code> ‚Äî –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ.

üìÖ <b>–ê—è—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 6:00 —É—Ç—Ä–∞.</b>

<b>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>
- –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É 1: <code>/addpage 1</code>
- –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É 1: <code>/remove 1</code>
- –ü–æ–ª—É—á–∏—Ç—å –∞—è—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å —á—Ç–µ—Ü–æ–º –ê–ª—å-–ê—Ñ–∞—Å–∏: <code>/review alafasy</code>

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/help</code>.
`;

  ctx.replyWithHTML(welcomeMessage);
});
bot.command("help", async (ctx) => {
  const helpMessage = `
üìö <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:</b>

<b>1. –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
- <code>/addpage &lt;–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã&gt;</code> ‚Äî –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞—É—á–∏–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>/addpage 1</code>).
- <code>/addayah &lt;–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã&gt; &lt;–Ω–∞—á–∞–ª—å–Ω—ã–π_–∞—è—Ç&gt; &lt;–∫–æ–Ω–µ—á–Ω—ã–π_–∞—è—Ç&gt;</code> ‚Äî –î–æ–±–∞–≤–∏—Ç—å –∞—è—Ç—ã –¥–ª—è –∑–∞—É—á–∏–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>/addayah 1 1 10</code>).
- <code>/review [—á—Ç–µ—Ü]</code> ‚Äî –ü–æ–ª—É—á–∏—Ç—å –∞—è—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ —á—Ç–µ—Ü—ã: <i>husary</i>, <i>alafasy</i>, <i>abdulsamad</i>.
- <code>/list</code> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞—É—á–∏–≤–∞–Ω–∏—è.
- <code>/remove &lt;–Ω–æ–º–µ—Ä_—Å—Ç—Ä–∞–Ω–∏—Ü—ã&gt;</code> ‚Äî –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code>/remove 1</code>).
- <code>/update</code> ‚Äî –û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –≤—Ä—É—á–Ω—É—é.
- <code>/progress</code> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞—É—á–∏–≤–∞–Ω–∏—è.
- <code>/reciters</code> ‚Äî –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á—Ç–µ—Ü–æ–≤.
- <code>/help</code> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

<b>2. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞—É—á–∏–≤–∞–Ω–∏—è:</b>
–ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥–∏–∫—É <i>"–°–∞–±–∞“õ-–°–∞–±“õ–∏-–ú–∞–Ω–∑–∏–ª—å"</i>:
- <b>–°–∞–±–∞“õ</b>: –ù–æ–≤—ã–µ –∞—è—Ç—ã –∑–∞—É—á–∏–≤–∞—é—Ç—Å—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è: 1, 3 –∏ 7 –¥–Ω–µ–π.
- <b>–°–∞–±“õ–∏</b>: –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç—Ç–∞–ø–∞ "–°–∞–±–∞“õ" –∞—è—Ç—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏: 14 –∏ 30 –¥–Ω–µ–π.
- <b>–ú–∞–Ω–∑–∏–ª—å</b>: –ù–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ –∞—è—Ç—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 90 –∏ 180 –¥–Ω–µ–π.

<b>3. –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</b>
- –ê—è—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ <b>6:00 —É—Ç—Ä–∞</b>.
- –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∞—è—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã <code>/review</code>.

<b>4. –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>
- –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É 1: <code>/addpage 1</code>
- –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É 1: <code>/remove 1</code>
- –ü–æ–ª—É—á–∏—Ç—å –∞—è—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å —á—Ç–µ—Ü–æ–º –ê–ª—å-–ê—Ñ–∞—Å–∏: <code>/review alafasy</code>

<b>5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
- <code>/progress</code> ‚Äî –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞—É—á–∏–≤–∞–Ω–∏—è –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
- <code>/reciters</code> ‚Äî –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á—Ç–µ—Ü–æ–≤ –∏ –∏—Ö —Å—Ç–∏–ª–µ–π.

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ <code>/start</code> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
`;

  try {
    await ctx.replyWithHTML(helpMessage);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
});

schedule.scheduleJob("0 6 * * *", () => {
  logger.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è...");
  updateReviewSchedule();
});

bot.launch();
logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.");